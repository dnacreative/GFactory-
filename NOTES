~ PRE-DEV NOTES ~
=========================================================================================================
Example File Structure - *extreme example
=========================================================================================================

* * * galleries folder must work if it has its own files plus gallery folders and their categories * * *
galleries ------|
		|
		| * * * Gallery folder must work without categories * * *
		|----------------gallery1
		|			|		
		|			|
		|			|---------------category1
		|			|			|
		|			|			|--image1.jpg
		|			|---image1.jpg		|
		|			|			|--image2.jpg
		|----image1.jpg		|			|
		|			|			|--image3.jpg
		|			|---image2.png
		|			|
		|			|---------------category2
		|						|
		|----image2.png					|--image1.jpg
		|						|
		|						|--image2.jpg
		|						|
		|						|--image3.jpg
		|
		|----image3.gif	
		|
		|
		| * * * Gallery folder must work with categories and with its own files too * * *
		|----------------gallery2
		|			|		
		|			|
		|			|---------------category1
		|			|			|
		|			|			|--image1.jpg
		|			|---image1.jpg		|
		|			|			|--image2.jpg
		|			|---image2.jpg		|
		|----image4.jpeg	|			|--image3.jpg
		|			|---image3.jpg
		|			|
		|			|---------------category2
		|			|			|
		|			|			|--image1.jpg
		|			|			|
		|			|			|--image2.jpg
		|			|---image4.jpg		|
		|			|			|--image3.jpg
		...			...			...
		...			...			...

========================================================================================================= 

// { DESIRED API }
$galleries = $GFactory->galleries();

// The galleries() method would return something like the following:
$galleries = array( // Object = Gallery class instance
	'gallery1' => Object,
	'gallery2' => Object,
	'gallery3' => Object
);

// Specific Gallery
$Gallery1 = $GFactory->galleries('gallery1'); 
	-OR-  
$Gallery1 = $galleries['gallery1'];

// Gallery Class
$Gallery1->categories();
$Gallery1->categories('vacation');
$Gallery1->files();
$Gallery1->files('venice2011.jpg');


// { DESIRED USE }
$Gallery1 = $GFactory->galleries('gallery1');  -OR-  $Gallery1 = $galleries['gallery1'];

$array_of_immediate_files = $Gallery1->files();  //return NULL if there aren't any immediate files
$single_file_reference = $Gallery1->files('venice2011.jpg');

$array(s)_of_categorized_files = $Gallery1->categories();  //return empty Array if there aren't any categories
$array_of_specific_category_files = $Gallery1->categories('vacation');  //return NULL if category doesn't exist


========================================================================================================= 

// { TODO: }
1. Use only one way to do filename fixes & cleanups
2. Add the ability to get a single file reference from a category:
[CODE]
	$Vacation = $GF->galleries('vacation'); // Retrieve a gallery
	
	// Retrieve a category from the gallery & Retrieve the path to 'Venice1.jpg' image - Case Sensitive
	$Vacation->files($Vacation->categories('2011_Venice_Vacation'), 'Venice1.jpg'); 
[/CODE]

3. Add a create() method on GFactory class - When called it should create all the required GUI
4. Create an exlcude_file('image.png') method: When called it should return a modified file array (e.g. category files) with the requested file removed - the original array should not be affected
5. Add a "multiple" -or- "no_categories" flag on the GFactory constructor so when set to FALSE, Globutil will not look for category directories

=========================================================================================================
// { OTHER } - Perhaps we could use SPL iterators instead of plain glob()... not sure what the advantages could be
- Tutorial -  
http://phpmaster.com/using-spl-iterators-1/

- PHP.NET -
http://php.net/manual/en/book.spl.php
http://www.php.net/manual/en/class.globiterator.php
http://www.php.net/manual/en/class.directoryiterator.php
http://www.php.net/manual/en/class.filesystemiterator.php
